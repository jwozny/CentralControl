<Page x:Class="Unified_Systems.User.User"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:Unified_Systems.User"
      mc:Ignorable="d" 
      d:DesignHeight="600" d:DesignWidth="800"
      FontFamily="Consolas" FontSize="12" 
      Title="User" Loaded="User_Loaded" Unloaded="User_Unloaded">
    <Page.Resources>
        <DropShadowEffect x:Key="PrimaryGlow" ShadowDepth="0" Color="DeepSkyBlue" Opacity="1" BlurRadius="20"/>
        <Style x:Key="placeHolder" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid>
                            <TextBox Text="{Binding Path=Text,
                                                RelativeSource={RelativeSource TemplatedParent}, 
                                                Mode=TwoWay,
                                                UpdateSourceTrigger=PropertyChanged}"
                                 x:Name="textSource" 
                                 Background="Transparent" 
                                 Foreground="LightGray"
                                 CaretBrush="LightGray"
                                 Padding="5"
                                 VerticalContentAlignment="Center" 
                                 Panel.ZIndex="2" />
                            <TextBox Text="{TemplateBinding Tag}" Background="{TemplateBinding Background}" Panel.ZIndex="1">
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}">
                                        <Setter Property="Foreground" Value="Transparent"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=Text, Source={x:Reference textSource}}" Value="">
                                                <Setter Property="Foreground" Value="#55D3D3D3"/>
                                                <Setter Property="Padding" Value="5"/>
                                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="defaultTextBoxStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="#FF454545"/>
            <Setter Property="Foreground" Value="LightGray"/>
            <Setter Property="CaretBrush" Value="LightGray"/>
            <Setter Property="BorderBrush" Value="LightGray"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Margin" Value="0,0,0,2"/>
            <Setter Property="Height" Value="21"/>
        </Style>
        <Style x:Key="defaultPasswordBoxStyle" TargetType="{x:Type PasswordBox}">
            <Setter Property="Background" Value="#FF454545"/>
            <Setter Property="Foreground" Value="LightGray"/>
            <Setter Property="CaretBrush" Value="LightGray"/>
            <Setter Property="BorderBrush" Value="LightGray"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Margin" Value="0,0,0,2"/>
            <Setter Property="Height" Value="21"/>
        </Style>

        <Style x:Key="errorTextBoxStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="#FF454545"/>
            <Setter Property="Foreground" Value="LightGray"/>
            <Setter Property="CaretBrush" Value="LightGray"/>
            <Setter Property="BorderBrush" Value="#DDDD3333"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Margin" Value="0,0,0,2"/>
            <Setter Property="Height" Value="21"/>
        </Style>
        <Style x:Key="errorPasswordBoxStyle" TargetType="{x:Type PasswordBox}">
            <Setter Property="Background" Value="#FF454545"/>
            <Setter Property="Foreground" Value="LightGray"/>
            <Setter Property="CaretBrush" Value="LightGray"/>
            <Setter Property="BorderBrush" Value="#FFFF4040"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Margin" Value="0,0,0,2"/>
            <Setter Property="Height" Value="21"/>
        </Style>
        
        <Style x:Key="defaultCheckBoxStyle" TargetType="{x:Type CheckBox}">
            <Setter Property="Margin" Value="10,5,0,2"/>
            <Setter Property="Height" Value="21"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="LightGray"/>
        </Style>

        <Style x:Key="defaultLabelStyle" TargetType="{x:Type Label}">
            <Setter Property="Margin" Value="0,0,0,2"/>
            <Setter Property="Padding" Value="5,0"/>
            <Setter Property="Height" Value="21"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="LightGray"/>
        </Style>

        <Style x:Key="defaultLabelButtonStyle" TargetType="{x:Type Label}">
            <Setter Property="Margin" Value="10"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="VerticalAlignment" Value="Bottom"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="LightGray"/>
            <Setter Property="Background" Value="#FF454545"/>
            <Setter Property="BorderBrush" Value="#FF808080"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="DeepSkyBlue"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="defaultMouseDownLabelButtonStyle" TargetType="{x:Type Label}">
            <Setter Property="Margin" Value="10"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="VerticalAlignment" Value="Bottom"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="DeepSkyBlue"/>
            <Setter Property="Background" Value="#FF454545"/>
            <Setter Property="BorderBrush" Value="DeepSkyBlue"/>
            <Setter Property="BorderThickness" Value="1"/>
        </Style>
        
        <Style x:Key="defaultSyncLabelButtonStyle" TargetType="{x:Type Label}">
            <Setter Property="Height" Value="25"/>
            <Setter Property="Width" Value="200"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="LightGray"/>
            <Setter Property="Background" Value="#FF202020"/>
            <Setter Property="BorderBrush" Value="#FF808080"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="DeepSkyBlue"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="defaultSyncMouseDownLabelButtonStyle" TargetType="{x:Type Label}">
            <Setter Property="Height" Value="25"/>
            <Setter Property="Width" Value="200"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="DeepSkyBlue"/>
            <Setter Property="Background" Value="#FF202020"/>
            <Setter Property="BorderBrush" Value="DeepSkyBlue"/>
            <Setter Property="BorderThickness" Value="1"/>
        </Style>
        <Style x:Key="defaultSyncErrorLabelButtonStyle" TargetType="{x:Type Label}">
            <Setter Property="Height" Value="25"/>
            <Setter Property="Width" Value="200"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="LightGray"/>
            <Setter Property="Background" Value="#FF202020"/>
            <Setter Property="BorderBrush" Value="#FFFD3333"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="LightGray"/>
                    <Setter Property="BorderBrush" Value="DeepSkyBlue"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <Style x:Key="MessageOverview" TargetType="{x:Type Label}">
            <Setter Property="Margin" Value="-10"/>
            <Setter Property="Height" Value="100"/>
            <Setter Property="FontSize" Value="25"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="LightGray"/>
            <Setter Property="Background" Value="#CC101010"/>
            <Style.Triggers>
                <Trigger Property="Visibility" Value="Visible">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="00:00:01" BeginTime="00:00:00" From="0.0" To="1.0" />
                                <DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="00:00:01" BeginTime="00:00:02" From="1.0" To="0.0" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <Style x:Key="warningConfirmLabelButtonStyle" TargetType="{x:Type Label}">
            <Setter Property="Margin" Value="10,40,300,0"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="Width" Value="200"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="LightGray"/>
            <Setter Property="Background" Value="#FF454545"/>
            <Setter Property="BorderBrush" Value="#FF808080"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="DarkRed"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="warningCancelLabelButtonStyle" TargetType="{x:Type Label}">
            <Setter Property="Margin" Value="300,40,10,0"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="Width" Value="200"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="LightGray"/>
            <Setter Property="Background" Value="#FF454545"/>
            <Setter Property="BorderBrush" Value="#FF808080"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="DeepSkyBlue"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="WarningMessageOverview" TargetType="{x:Type Label}">
            <Setter Property="Margin" Value="-10"/>
            <Setter Property="Height" Value="100"/>
            <Setter Property="Padding" Value="10"/>
            <Setter Property="FontSize" Value="25"/>
            <Setter Property="VerticalContentAlignment" Value="Top"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="LightGray"/>
            <Setter Property="Background" Value="#FF101010"/>
        </Style>

        <Style x:Key="defaultMessageStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="Padding" Value="0"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="Foreground" Value="#FFFF8080"/>
        </Style>
        
    </Page.Resources>
    <Grid Margin="10" Background="#FF303030">
        <Grid.RowDefinitions>
            <RowDefinition Height="31"/>
            <RowDefinition Height="345"/>
            <RowDefinition/>
            <RowDefinition Height="47"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="130"/>
            <ColumnDefinition Width="130"/>
            <ColumnDefinition Width="130"/>
            <ColumnDefinition Width="130"/>
            <ColumnDefinition/>
            <ColumnDefinition Width="130"/>
        </Grid.ColumnDefinitions>
        <Border x:Name="curtain" Margin="-10" Grid.RowSpan="4" Grid.ColumnSpan="6" Background="#DD303030" Visibility="Hidden"/>
        <Grid x:Name="credInputs" VerticalAlignment="Center" Width="250" HorizontalAlignment="Center" Grid.RowSpan="4" Grid.ColumnSpan="6" Visibility="Visible">
            <Grid.RowDefinitions>
                <RowDefinition Height="20"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Border Grid.RowSpan="2" Grid.ColumnSpan="2" BorderBrush="LightGray" BorderThickness="1"  Background="#FF303030" Margin="0,15,0,0"/>
            <Label Grid.ColumnSpan="2" Margin="20,0" VerticalAlignment="Bottom" Content ="Active Directory" Padding="5,0" Foreground="LightGray" Background="#FF303030" FontSize="15" HorizontalAlignment="Left"/>
            <StackPanel Grid.Row="1" Grid.ColumnSpan="2" Margin="10">
                <TextBlock x:Name="credInputMessage" Text ="" Style="{StaticResource defaultMessageStyle}" Visibility="Collapsed"/>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <StackPanel Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2">
                        <CheckBox x:Name="ADdomainCheckbox" Content="Use Local Domain" Style="{StaticResource defaultCheckBoxStyle}" IsChecked="False" Checked="ADdomainCheckbox_Checked" Unchecked="ADdomainCheckbox_Unchecked"/>
                        <Label Content ="Domain Name" Style="{StaticResource defaultLabelStyle}"/>
                        <CheckBox x:Name="ADcredentialsCheckbox" Content="Use Windows Authentication" Style="{StaticResource defaultCheckBoxStyle}" IsChecked="False" Checked="ADcredentialsCheckbox_Checked" Unchecked="ADcredentialsCheckbox_Unchecked"/>
                        <Label Content ="Username" Style="{StaticResource defaultLabelStyle}"/>
                        <Label Content ="Password" Style="{StaticResource defaultLabelStyle}"/>
                        <Label x:Name="resetLabelButton" Content="Reset" Margin="10,10,10,0" Style="{StaticResource defaultLabelButtonStyle}" HorizontalAlignment="Left" Width="90" MouseDown="resetLabelButton_MouseDown" MouseUp="resetLabelButton_MouseUp" MouseLeave="resetLabelButton_MouseLeave"/>
                    </StackPanel>
                    <StackPanel Grid.Row="1" Grid.Column="1">
                        <Label Style="{StaticResource defaultLabelStyle}" Margin="0,5,0,2" IsHitTestVisible="False"/>
                        <TextBox x:Name="ADdomainTextBox" Style="{StaticResource defaultTextBoxStyle}" KeyDown="ADdomainTextBox_KeyDown" GotFocus="ADdomainTextBox_GotFocus"/>
                        <Label Style="{StaticResource defaultLabelStyle}" Margin="0,5,0,2" IsHitTestVisible="False"/>
                        <TextBox x:Name="ADuserTextBox" Style="{StaticResource defaultTextBoxStyle}" GotFocus="ADuserTextBox_GotFocus"/>
                        <PasswordBox x:Name="ADpassPasswordBox" Style="{StaticResource defaultPasswordBoxStyle}" KeyDown="ADpassPasswordBox_KeyDown" GotFocus="ADpassPasswordBox_GotFocus"/>
                        <Label x:Name="saveCredLabelButton" Content="Connect" Margin="10,10,10,0" Style="{StaticResource defaultLabelButtonStyle}" HorizontalAlignment="Right" Width="90" MouseDown="saveCredLabelButton_MouseDown" MouseUp="saveCredLabelButton_MouseUp" MouseLeave="saveCredLabelButton_MouseLeave"/>
                    </StackPanel>
                </Grid>
            </StackPanel>
        </Grid>
    </Grid>
</Page>
